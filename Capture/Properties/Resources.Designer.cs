//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Capture.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Capture.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active window was not found..
        /// </summary>
        public static string Exception_ActiveWindowWasNotFound {
            get {
                return ResourceManager.GetString("Exception_ActiveWindowWasNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get window title..
        /// </summary>
        public static string Exception_FailedToGetWindowTitle {
            get {
                return ResourceManager.GetString("Exception_FailedToGetWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to measure window..
        /// </summary>
        public static string Exception_FailedToMeasureWindow {
            get {
                return ResourceManager.GetString("Exception_FailedToMeasureWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include window frame.
        /// </summary>
        public static string SettingsWindow_CheckBox_IncludeWindowFrame {
            get {
                return ResourceManager.GetString("SettingsWindow_CheckBox_IncludeWindowFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random GUID (upper case / lower case).
        /// </summary>
        public static string SettingsWindow_Description_Guid {
            get {
                return ResourceManager.GetString("SettingsWindow_Description_Guid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MD5 hash value of the file (upper case / lower case).
        /// </summary>
        public static string SettingsWindow_Description_MD5 {
            get {
                return ResourceManager.GetString("SettingsWindow_Description_MD5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA1 hash value of the file (upper case / lower case).
        /// </summary>
        public static string SettingsWindow_Description_SHA1 {
            get {
                return ResourceManager.GetString("SettingsWindow_Description_SHA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA256 hash value of the file (upper case / lower case).
        /// </summary>
        public static string SettingsWindow_Description_SHA256 {
            get {
                return ResourceManager.GetString("SettingsWindow_Description_SHA256", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window title.
        /// </summary>
        public static string SettingsWindow_Description_WindowTitle {
            get {
                return ResourceManager.GetString("SettingsWindow_Description_WindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference.
        /// </summary>
        public static string SettingsWindow_DirectoryPicker_Reference {
            get {
                return ResourceManager.GetString("SettingsWindow_DirectoryPicker_Reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File location.
        /// </summary>
        public static string SettingsWindow_Header_DirectoryName {
            get {
                return ResourceManager.GetString("SettingsWindow_Header_DirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name / format.
        /// </summary>
        public static string SettingsWindow_Header_FileNameAndFormat {
            get {
                return ResourceManager.GetString("SettingsWindow_Header_FileNameAndFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkey.
        /// </summary>
        public static string SettingsWindow_Header_Hotkey {
            get {
                return ResourceManager.GetString("SettingsWindow_Header_Hotkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image.
        /// </summary>
        public static string SettingsWindow_Header_Image {
            get {
                return ResourceManager.GetString("SettingsWindow_Header_Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template tags (reference).
        /// </summary>
        public static string SettingsWindow_Header_PathTemplateTags {
            get {
                return ResourceManager.GetString("SettingsWindow_Header_PathTemplateTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {Custom Date and Time Format Strings in .NET Framework}.
        /// </summary>
        public static string SettingsWindow_Note_DateAndTimeFormatStrings_LinkText0 {
            get {
                return ResourceManager.GetString("SettingsWindow_Note_DateAndTimeFormatStrings_LinkText0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings.
        /// </summary>
        public static string SettingsWindow_Note_DateAndTimeFormatStrings_LinkUrl0 {
            get {
                return ResourceManager.GetString("SettingsWindow_Note_DateAndTimeFormatStrings_LinkUrl0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to the above,.
        /// </summary>
        public static string SettingsWindow_Note_DateAndTimeFormatStrings_Text0 {
            get {
                return ResourceManager.GetString("SettingsWindow_Note_DateAndTimeFormatStrings_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (e.g., {yyyy-MM-dd-hh-mm-ss}) are also available..
        /// </summary>
        public static string SettingsWindow_Note_DateAndTimeFormatStrings_Text1 {
            get {
                return ResourceManager.GetString("SettingsWindow_Note_DateAndTimeFormatStrings_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template tags are available for this setting..
        /// </summary>
        public static string SettingsWindow_Note_PathTemplateTagsAvailable {
            get {
                return ResourceManager.GetString("SettingsWindow_Note_PathTemplateTagsAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string SettingsWindow_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quit.
        /// </summary>
        public static string TaskTrayIconItem_Quit {
            get {
                return ResourceManager.GetString("TaskTrayIconItem_Quit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string TaskTrayIconItem_Settings {
            get {
                return ResourceManager.GetString("TaskTrayIconItem_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Toast_Action_Delete {
            get {
                return ResourceManager.GetString("Toast_Action_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string Toast_Action_Open {
            get {
                return ResourceManager.GetString("Toast_Action_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Captured :(.
        /// </summary>
        public static string Toast_Title_Failed {
            get {
                return ResourceManager.GetString("Toast_Title_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Captured!.
        /// </summary>
        public static string Toast_Title_Success {
            get {
                return ResourceManager.GetString("Toast_Title_Success", resourceCulture);
            }
        }
    }
}
